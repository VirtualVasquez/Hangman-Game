{"ast":null,"code":"var _jsxFileName = \"D:\\\\Desktop\\\\Repositories\\\\Hangman-Game\\\\src\\\\App.js\";\nimport React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Intro from './components/intro/Intro.js';\nimport Result from './components/result/result.js';\nimport Game from './components/game/game.js';\nimport Keyboard from './components/keyboard/keyboard.js';\nimport './App.css';\nconst nameBank = ['alphys', 'asgore', 'flowey', 'mettaton', 'monsterkid', 'napstablook', 'papyrus', 'sans', 'toriel', 'undyne'];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.newGame = () => {\n      let selected = nameBank[Math.floor(Math.random() * nameBank.length)];\n      let start = [];\n\n      for (let i = 0; i < selected.length; i++) {\n        start.push(\"_\");\n      }\n\n      this.setState({\n        chances: 6,\n        subject: selected,\n        picture: require(`./components/game/subjects/${selected}.png`),\n        right: [...start],\n        wrong: [],\n        won: '',\n        showIntro: false,\n        showGame: true,\n        showResult: false\n      });\n    };\n\n    this.showResult = bool => {\n      this.setState({\n        showGame: false,\n        showResult: true,\n        won: bool\n      });\n    };\n\n    this.checkEntry = guess => {\n      let {\n        subject,\n        right,\n        wrong\n      } = this.state;\n      let matInd = [];\n\n      if (guess.match(/[a-z]/g)) {\n        //don't penalize for key != letter\n        let regex = new RegExp(guess, \"g\");\n\n        if (subject.match(regex) && !right.includes(guess)) {\n          this.getAllIndexes(matInd, subject, guess);\n\n          for (let n = 0; n < matInd.length; n++) {\n            right[matInd[n]] = guess;\n          }\n\n          this.setState({\n            right: right\n          });\n        }\n\n        if (!subject.match(regex) && !wrong.includes(guess) && wrong.length < 6) {\n          wrong.push(guess);\n          this.setState({\n            wrong: wrong\n          });\n\n          if (this.state.chances > 0) {\n            this.setState(state => ({\n              chances: state.chances - 1\n            }));\n          }\n        }\n      }\n\n      if (subject === right.join(\"\")) {\n        this.setState(state => ({\n          wins: state.wins + 1\n        }));\n        this.showResult(true);\n      }\n\n      if (this.state.chances === 0) {\n        this.showResult(false);\n      }\n    };\n\n    this.handleKeyPress = e => {\n      if (!this.state.showGame) {\n        return this.newGame();\n      } else {\n        let c = String.fromCharCode(e.keyCode).toLowerCase();\n        this.checkEntry(c);\n      }\n    };\n\n    this.handleClick = e => {\n      if (!this.state.showGame) {\n        this.setState({\n          showIntro: false,\n          showGame: true,\n          showResult: false\n        });\n        this.newGame();\n      }\n\n      if (this.state.showKeyboard) {\n        this.handleButtonPress(e);\n      }\n\n      if (e.target.id === \"fight\") {\n        this.setState({\n          showKeyboard: !this.state.showKeyboard\n        });\n      }\n    };\n\n    this.handleButtonPress = e => {\n      let c = String.fromCharCode(e.target.id);\n      this.checkEntry(c);\n    };\n\n    this.displayGuesses = () => {\n      let tried = this.state.wrong;\n      return tried.join(\",\");\n    };\n\n    this.getAllIndexes = (arr, str, a) => {\n      for (let i = 0; i < str.length; i++) {\n        if (str.charAt(i) === a) {\n          arr.push(i);\n        }\n      }\n    };\n\n    this.state = {\n      wins: 0,\n      chances: 6,\n      subject: '',\n      picture: '',\n      right: [],\n      wrong: [],\n      won: '',\n      showIntro: true,\n      showGame: false,\n      showResult: false,\n      showKeyboard: false\n    };\n    this.newGame = this.newGame.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.displayGuesses = this.displayGuesses.bind(this);\n    this.getAllIndexes = this.getAllIndexes.bind(this);\n    this.checkEntry = this.checkEntry.bind(this);\n    this.handleButtonPress = this.handleButtonPress.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyPress);\n    window.addEventListener('click', this.handleClick);\n  }\n\n  render() {\n    let {\n      showIntro,\n      showGame,\n      showResult\n    } = this.state;\n\n    if (showIntro && !showGame && !showResult) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(Intro, {\n        onKeyPress: this.showGame,\n        onClick: this.handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 35\n        }\n      }));\n    }\n\n    if (!showIntro && showGame && !showResult) {\n      return /*#__PURE__*/React.createElement(Container, {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Game, {\n        onKeyPress: this.handleKeyPress,\n        guesses: this.displayGuesses(),\n        wins: this.state.wins,\n        chances: this.state.chances,\n        subject: this.state.subject,\n        picture: this.state.picture,\n        right: this.state.right,\n        wrong: this.state.wrong,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Keyboard, {\n        onClick: this.handleButtonPress,\n        reveal: this.state.showKeyboard,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    if (!showIntro && !showGame && showResult) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Result, {\n        won: this.state.won,\n        onClick: this.handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }\n      }));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/Desktop/Repositories/Hangman-Game/src/App.js"],"names":["React","Container","Intro","Result","Game","Keyboard","nameBank","App","Component","constructor","props","newGame","selected","Math","floor","random","length","start","i","push","setState","chances","subject","picture","require","right","wrong","won","showIntro","showGame","showResult","bool","checkEntry","guess","state","matInd","match","regex","RegExp","includes","getAllIndexes","n","join","wins","handleKeyPress","e","c","String","fromCharCode","keyCode","toLowerCase","handleClick","showKeyboard","handleButtonPress","target","id","displayGuesses","tried","arr","str","a","charAt","bind","componentDidMount","window","addEventListener","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Intro from './components/intro/Intro.js';\r\nimport Result from './components/result/result.js';\r\nimport Game from './components/game/game.js';\r\nimport Keyboard from './components/keyboard/keyboard.js';\r\nimport './App.css';\r\n\r\nconst nameBank =  ['alphys', 'asgore', 'flowey', 'mettaton', 'monsterkid', 'napstablook', 'papyrus', 'sans', 'toriel', 'undyne']\r\n\r\nclass App extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      wins: 0,\r\n      chances: 6,\r\n      subject: '',\r\n      picture: '',\r\n      right: [],\r\n      wrong: [],\r\n      won: '',\r\n      showIntro:true,\r\n      showGame:false,\r\n      showResult:false,\r\n      showKeyboard: false\r\n    }\r\n    this.newGame = this.newGame.bind(this);\r\n    this.handleKeyPress = this.handleKeyPress.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.displayGuesses = this.displayGuesses.bind(this)\r\n    this.getAllIndexes = this.getAllIndexes.bind(this)\r\n    this.checkEntry = this.checkEntry.bind(this)\r\n    this.handleButtonPress = this.handleButtonPress.bind(this)\r\n  }\r\n  \r\n  componentDidMount(){\r\n      window.addEventListener('keydown', this.handleKeyPress);\r\n      window.addEventListener('click', this.handleClick);\r\n      \r\n  }\r\n  newGame = () =>{\r\n    let selected =  nameBank[Math.floor(Math.random()* nameBank.length)];\r\n    let start = []\r\n    for (let i = 0; i < selected.length; i++){\r\n      start.push(\"_\")\r\n    }\r\n    this.setState({\r\n      chances: 6,\r\n      subject:selected,\r\n      picture: require(`./components/game/subjects/${selected}.png`),\r\n      right: [...start],\r\n      wrong: [],\r\n      won:'',\r\n      showIntro: false,\r\n      showGame: true,\r\n      showResult: false\r\n    })\r\n  }\r\n  showResult = (bool) =>{\r\n    this.setState({\r\n      showGame: false,\r\n      showResult: true,\r\n      won: bool\r\n    })\r\n  }\r\n  checkEntry = (guess) =>  {\r\n    let {subject, right, wrong} = this.state;\r\n    let matInd = [];\r\n    if(guess.match(/[a-z]/g)){//don't penalize for key != letter\r\n        let regex = new RegExp(guess, \"g\");\r\n        if(subject.match(regex) && !right.includes(guess)){\r\n          this.getAllIndexes(matInd,subject, guess);\r\n          for(let n = 0; n < matInd.length; n++){\r\n            right[matInd[n]] =  guess\r\n          }\r\n          this.setState({\r\n            right: right\r\n          })\r\n        } \r\n        if(!subject.match(regex) && !wrong.includes(guess) && wrong.length < 6){\r\n          wrong.push(guess)\r\n          this.setState({\r\n            wrong: wrong\r\n          })\r\n          if(this.state.chances > 0){\r\n            this.setState((state) => ({\r\n              chances: state.chances - 1\r\n            }))\r\n          }\r\n        }\r\n    }\r\n    if(subject === right.join(\"\")){\r\n      this.setState((state) => ({\r\n        wins: state.wins + 1\r\n      }))\r\n      this.showResult(true)\r\n    }\r\n    if(this.state.chances === 0){\r\n      this.showResult(false)\r\n    }\r\n  }\r\n  handleKeyPress = (e) =>{\r\n    if(!this.state.showGame){\r\n      return this.newGame()\r\n    }else{\r\n\r\n     let c = String.fromCharCode(e.keyCode).toLowerCase();\r\n      this.checkEntry(c);\r\n    }\r\n  }\r\n  handleClick = (e) =>{\r\n    if (!this.state.showGame){\r\n      this.setState({\r\n        showIntro: false,\r\n        showGame: true,\r\n        showResult: false\r\n      })\r\n      this.newGame();\r\n    }\r\n    if(this.state.showKeyboard){\r\n      this.handleButtonPress(e);\r\n    }\r\n    if(e.target.id === \"fight\"){\r\n      this.setState({\r\n        showKeyboard: !this.state.showKeyboard\r\n      })\r\n    }\r\n  }\r\n  handleButtonPress = (e) =>{\r\n    let c = String.fromCharCode(e.target.id);\r\n    this.checkEntry(c)\r\n  }\r\n\r\n  displayGuesses = () =>{\r\n    let tried = this.state.wrong;\r\n    return tried.join(\",\")\r\n  }\r\n  getAllIndexes = (arr, str, a) => {\r\n    for (let i = 0; i < str.length; i++){\r\n      if(str.charAt(i) === a){\r\n        arr.push(i)\r\n      }\r\n    }\r\n  }\r\n  render(){\r\n    let {showIntro, showGame, showResult} = this.state;\r\n\r\n    if(showIntro && !showGame && !showResult){\r\n      return <div className=\"App\"><Intro onKeyPress={this.showGame}  onClick={this.handleClick} /></div>\r\n    }\r\n\r\n    if(!showIntro && showGame && !showResult){\r\n      return (\r\n        <Container className=\"App\">\r\n          <Game \r\n            onKeyPress={this.handleKeyPress}\r\n            guesses={this.displayGuesses()}\r\n            wins={this.state.wins}\r\n            chances={this.state.chances}\r\n            subject={this.state.subject}\r\n            picture={this.state.picture}\r\n            right={this.state.right}\r\n            wrong={this.state.wrong}\r\n          />\r\n          <Keyboard \r\n            onClick={this.handleButtonPress} \r\n            reveal={this.state.showKeyboard}\r\n          />\r\n        </Container>\r\n      )\r\n    }\r\n    \r\n    if(!showIntro && !showGame && showResult){\r\n      return (\r\n        <div className=\"App\">\r\n          <Result won={this.state.won} onClick={this.handleClick}/>\r\n        </div>\r\n      )\r\n    }\r\n\r\n\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}